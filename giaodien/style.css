* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Arial, Helvetica, sans-serif;
}
li {
    /* không có biểu tượng hoặc ký hiệu nào sẽ được hiển thị bên cạnh các mục trong danh sách, cụ thể ở đây là dấu chấm trước mỗi mục */
    list-style: none;
}
a {
    /* Xóa gạch chân dưới của các liên kết */
    text-decoration: none;
    color: #000;
}
/*---------------------------------------------------- header ------------------------------------------------------*/
header {
    /* Thuộc tính này biến phần tử <header> thành một flex container, 
    làm cho các phần tử con của nó trở thành các flex items, 
    cho phép chúng được sắp xếp và căn chỉnh dễ dàng, cụ thể ở đây là chiều ngang */
    display: flex;
    justify-content: space-between;
    padding: 12px 50px;
    height: 70px;
    /* căn chỉnh các phần tử theo trục chính của container vào giữa */
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    background: rgba(255, 255, 255, 0.3);
}
header.sticky {
    background: rgba(255, 255, 255, 1);
}
header:hover {
    background: rgba(255, 255, 255, 1);
}
/* logo, menu và others là các class con flex items của các phần tử con của header
số 1, 3, 1 là tỉ lệ chiều rộng của các phần tử con
5 là tổng tỉ lệ chiều rộng của các phần tử con, số này có thể thay đổi tùy theo tổng số phần tử con và flex items của chúng */
.logo {
    flex: 1;
}
.logo img {
    height: 60px;
}
.menu {
    flex: 3;
    /* Thuộc tính này biến phần tử <menu> thành một flex container, 
    và các phần tử con của nó trở thành các flex items, cho phép chúng được sắp xếp và căn chỉnh dễ dàng, cụ thể ở đây là chiều ngang */
    display: flex;
}
.menu > li {
    padding: 0 12px;
}
/* Menu con của menu Nữ */
.menu > li:hover .sub-menu {
    visibility: visible;
    top: 50px;
}
.sub-menu {
    position: absolute;
    width: 150px;
    border: 1px solid #ccc;
    padding: 10px 0 10px 20px;
    visibility: hidden;
    top: 50px;
    transition: 0.3s;
    z-index: 1;
    background: #fff;
}
.sub-menu ul {
    padding-left: 20px;
}
.sub-menu ul a {
    font-weight: normal!important;
    font-size: 12px!important;
}
.menu li a {
    font-size: 12px;
    /* Tô đậm chữ */
    /* từ khóa !important được sử dụng để ghi đè các quy tắc CSS khác và đảm bảo rằng quy tắc được áp dụng sẽ có ưu tiên cao nhất. 
    Khi một quy tắc CSS được đánh dấu bằng !important, nó sẽ ghi đè lên bất kỳ quy tắc nào không có !important và có cùng độ ưu tiên. */
    font-weight: bold!important;
    display: block;
    line-height: 20px;
}
.others {
    flex: 1;
    display: flex;
}
.others > li {
    padding: 0 12px;
    position: relative;
}
.others > li::after {
    content: "";
    display: block;
    width: 1px;
    height: 80%;
    background: #cccccc;
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
}
.others >li:last-child::after {
    display: none;
}
.others > li:first-child {
    position: relative;
}
.others > li:first-child input {
    width: 100%;
    border: none;
    border-bottom: 1px solid #333;
    background: transparent;
}
.others > li:first-child i {
    position: absolute;
    right: 10px;
}
/*---------------------------------------------------- end header ------------------------------------------------------*/

/*---------------------------------------------------- slide ------------------------------------------------------*/
#Slider {
    padding-bottom: 30px;
    border-bottom: 2px solid  #333;
    /* Khi một phần tử có kích thước cố định và nội dung bên trong vượt quá kích thước đó, 
    mặc định là nội dung sẽ tràn ra ngoài phần tử đó. Tuy nhiên, bằng cách sử dụng thuộc tính overflow: hidden;,
    chúng ta có thể ẩn đi phần nội dung bị tràn ra ngoài và chỉ hiển thị phần nội dung nằm trong kích thước của phần tử. */
    overflow: hidden;
}
.aspect-ratio-169 {
    display: block;
    position: relative;
    padding-top: 56.25%;
    transition: 0.3s;
}

.aspect-ratio-169 img {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.dot-container {
    /* Khi một phần tử được đặt vị trí tuyệt đối, nó sẽ được đặt dựa trên vị trí của phần tử cha gần nhất có thuộc tính position khác static. */
    position: absolute;
    display: flex;
    height: 30px;
    width: 100%;
    align-items: center;
    text-align: center;
    justify-content: center;
}
.dot {
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background-color: #CCC;
    margin-right: 12px;
}
.dot.active {
    background-color: #333;
}
/*---------------------------------------------------- end slide ------------------------------------------------------*/

/*---------------------------------------------------- app container ------------------------------------------------------*/
.app-container {
    text-align: center;
    align-items: center;
    padding: 150px 0 50px 0;
}
.app-google {
    margin: 50px;
}
.app-google img {
    height: 50px;
}
.app-container p {
    /* Thuộc tính line-height trong CSS được sử dụng để định dạng độ cao của dòng chữ trong một phần tử. 
    Nó xác định khoảng cách giữa các dòng chữ bên trong phần tử đó. */
    line-height: 20px;
    /* Thuộc tính "letter-spacing" trong CSS được sử dụng để điều chỉnh khoảng cách giữa các ký tự trong một phần tử văn bản.
    Bằng cách thay đổi giá trị của thuộc tính này, bạn có thể làm cho các ký tự trở nên rộng hơn hoặc hẹp hơn,
    tạo ra hiệu ứng khoảng cách giữa các ký tự khác nhau. */
    letter-spacing: 1px;
    font-size: 17px;
    color: #000;
    font-weight: bold;
}
.app-container input {
    margin-top: 50px;
    border: none;
    border-bottom: 1px solid #000;
    padding-bottom: 20px;
    width: 400px;
    text-align: center;
    outline: none;
}
/*---------------------------------------------------- end app container ------------------------------------------------------*/

/*---------------------------------------------------- footer ------------------------------------------------------*/
footer {
    text-align: center;
}
.footer-top {
    display: flex;
    text-align: center;
    /* Hàm này được sử dụng để căn giữa các phần tử con bên trong phần tử cha theo chiều ngang. */
    justify-content: center;
    /* Hàm align-items: center; trong CSS được sử dụng để căn chỉnh các phần tử con
    bên trong một phần tử cha theo chiều dọc (trục chính). Khi áp dụng giá trị center,
    các phần tử con sẽ được căn giữa theo chiều dọc của phần tử cha. */
    align-items: center;
    margin-bottom: 20px;
    height: 70px;
}
.footer-top img {
    height: 50px;
}
.footer-top li {
    padding: 0 12px;
    position: relative;
}
/* Dấu gạch ngăn cách giữa các phần tử con */
.footer-top li::after {
    content: "";
    display: block;
    width: 1px;
    height: 80%;
    background: #cccccc;
    position: absolute;
    right: 0;
    top: 50%;
    /* Thuộc tính transform: translateY(-50%); được sử dụng để di chuyển phần tử theo hướng dọc (trục y).
    Trong trường hợp này, giá trị -50% được sử dụng để di chuyển phần tử lên trên một nửa chiều cao của
    chính nó. Điều này có thể được sử dụng để căn giữa phần tử theo chiều dọc trong một phần tử cha. */
    transform: translateY(-50%);
}
.footer-top li:last-child::after {
    display: none;
}
.footer-top li:last-child a {
    margin-right: 20px;
    color: #333;
}
.footer-bottom {
    /* background: #333;
    color: #fff; */
    padding: 20px 0;
}
/*---------------------------------------------------- end footer ------------------------------------------------------*/

/*---------------------------------------------------- category ------------------------------------------------------*/
.row {
    display: flex;
    flex-wrap: wrap;
}
/*---------------------------------------------------- end category ------------------------------------------------------*/
